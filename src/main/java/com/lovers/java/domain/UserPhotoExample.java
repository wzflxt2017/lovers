package com.lovers.java.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserPhotoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    public UserPhotoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPhotoIdIsNull() {
            addCriterion("photo_id is null");
            return (Criteria) this;
        }

        public Criteria andPhotoIdIsNotNull() {
            addCriterion("photo_id is not null");
            return (Criteria) this;
        }

        public Criteria andPhotoIdEqualTo(Integer value) {
            addCriterion("photo_id =", value, "photoId");
            return (Criteria) this;
        }

        public Criteria andPhotoIdNotEqualTo(Integer value) {
            addCriterion("photo_id <>", value, "photoId");
            return (Criteria) this;
        }

        public Criteria andPhotoIdGreaterThan(Integer value) {
            addCriterion("photo_id >", value, "photoId");
            return (Criteria) this;
        }

        public Criteria andPhotoIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("photo_id >=", value, "photoId");
            return (Criteria) this;
        }

        public Criteria andPhotoIdLessThan(Integer value) {
            addCriterion("photo_id <", value, "photoId");
            return (Criteria) this;
        }

        public Criteria andPhotoIdLessThanOrEqualTo(Integer value) {
            addCriterion("photo_id <=", value, "photoId");
            return (Criteria) this;
        }

        public Criteria andPhotoIdIn(List<Integer> values) {
            addCriterion("photo_id in", values, "photoId");
            return (Criteria) this;
        }

        public Criteria andPhotoIdNotIn(List<Integer> values) {
            addCriterion("photo_id not in", values, "photoId");
            return (Criteria) this;
        }

        public Criteria andPhotoIdBetween(Integer value1, Integer value2) {
            addCriterion("photo_id between", value1, value2, "photoId");
            return (Criteria) this;
        }

        public Criteria andPhotoIdNotBetween(Integer value1, Integer value2) {
            addCriterion("photo_id not between", value1, value2, "photoId");
            return (Criteria) this;
        }

        public Criteria andAlbumIdIsNull() {
            addCriterion("album_id is null");
            return (Criteria) this;
        }

        public Criteria andAlbumIdIsNotNull() {
            addCriterion("album_id is not null");
            return (Criteria) this;
        }

        public Criteria andAlbumIdEqualTo(Integer value) {
            addCriterion("album_id =", value, "albumId");
            return (Criteria) this;
        }

        public Criteria andAlbumIdNotEqualTo(Integer value) {
            addCriterion("album_id <>", value, "albumId");
            return (Criteria) this;
        }

        public Criteria andAlbumIdGreaterThan(Integer value) {
            addCriterion("album_id >", value, "albumId");
            return (Criteria) this;
        }

        public Criteria andAlbumIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("album_id >=", value, "albumId");
            return (Criteria) this;
        }

        public Criteria andAlbumIdLessThan(Integer value) {
            addCriterion("album_id <", value, "albumId");
            return (Criteria) this;
        }

        public Criteria andAlbumIdLessThanOrEqualTo(Integer value) {
            addCriterion("album_id <=", value, "albumId");
            return (Criteria) this;
        }

        public Criteria andAlbumIdIn(List<Integer> values) {
            addCriterion("album_id in", values, "albumId");
            return (Criteria) this;
        }

        public Criteria andAlbumIdNotIn(List<Integer> values) {
            addCriterion("album_id not in", values, "albumId");
            return (Criteria) this;
        }

        public Criteria andAlbumIdBetween(Integer value1, Integer value2) {
            addCriterion("album_id between", value1, value2, "albumId");
            return (Criteria) this;
        }

        public Criteria andAlbumIdNotBetween(Integer value1, Integer value2) {
            addCriterion("album_id not between", value1, value2, "albumId");
            return (Criteria) this;
        }

        public Criteria andFileIdIsNull() {
            addCriterion("file_id is null");
            return (Criteria) this;
        }

        public Criteria andFileIdIsNotNull() {
            addCriterion("file_id is not null");
            return (Criteria) this;
        }

        public Criteria andFileIdEqualTo(Integer value) {
            addCriterion("file_id =", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotEqualTo(Integer value) {
            addCriterion("file_id <>", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdGreaterThan(Integer value) {
            addCriterion("file_id >", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("file_id >=", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdLessThan(Integer value) {
            addCriterion("file_id <", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdLessThanOrEqualTo(Integer value) {
            addCriterion("file_id <=", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdIn(List<Integer> values) {
            addCriterion("file_id in", values, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotIn(List<Integer> values) {
            addCriterion("file_id not in", values, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdBetween(Integer value1, Integer value2) {
            addCriterion("file_id between", value1, value2, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotBetween(Integer value1, Integer value2) {
            addCriterion("file_id not between", value1, value2, "fileId");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionIsNull() {
            addCriterion("photo_position is null");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionIsNotNull() {
            addCriterion("photo_position is not null");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionEqualTo(String value) {
            addCriterion("photo_position =", value, "photoPosition");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionNotEqualTo(String value) {
            addCriterion("photo_position <>", value, "photoPosition");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionGreaterThan(String value) {
            addCriterion("photo_position >", value, "photoPosition");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionGreaterThanOrEqualTo(String value) {
            addCriterion("photo_position >=", value, "photoPosition");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionLessThan(String value) {
            addCriterion("photo_position <", value, "photoPosition");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionLessThanOrEqualTo(String value) {
            addCriterion("photo_position <=", value, "photoPosition");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionLike(String value) {
            addCriterion("photo_position like", value, "photoPosition");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionNotLike(String value) {
            addCriterion("photo_position not like", value, "photoPosition");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionIn(List<String> values) {
            addCriterion("photo_position in", values, "photoPosition");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionNotIn(List<String> values) {
            addCriterion("photo_position not in", values, "photoPosition");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionBetween(String value1, String value2) {
            addCriterion("photo_position between", value1, value2, "photoPosition");
            return (Criteria) this;
        }

        public Criteria andPhotoPositionNotBetween(String value1, String value2) {
            addCriterion("photo_position not between", value1, value2, "photoPosition");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeIsNull() {
            addCriterion("photo_describe is null");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeIsNotNull() {
            addCriterion("photo_describe is not null");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeEqualTo(String value) {
            addCriterion("photo_describe =", value, "photoDescribe");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeNotEqualTo(String value) {
            addCriterion("photo_describe <>", value, "photoDescribe");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeGreaterThan(String value) {
            addCriterion("photo_describe >", value, "photoDescribe");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeGreaterThanOrEqualTo(String value) {
            addCriterion("photo_describe >=", value, "photoDescribe");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeLessThan(String value) {
            addCriterion("photo_describe <", value, "photoDescribe");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeLessThanOrEqualTo(String value) {
            addCriterion("photo_describe <=", value, "photoDescribe");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeLike(String value) {
            addCriterion("photo_describe like", value, "photoDescribe");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeNotLike(String value) {
            addCriterion("photo_describe not like", value, "photoDescribe");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeIn(List<String> values) {
            addCriterion("photo_describe in", values, "photoDescribe");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeNotIn(List<String> values) {
            addCriterion("photo_describe not in", values, "photoDescribe");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeBetween(String value1, String value2) {
            addCriterion("photo_describe between", value1, value2, "photoDescribe");
            return (Criteria) this;
        }

        public Criteria andPhotoDescribeNotBetween(String value1, String value2) {
            addCriterion("photo_describe not between", value1, value2, "photoDescribe");
            return (Criteria) this;
        }

        public Criteria andUploadTimeIsNull() {
            addCriterion("upload_time is null");
            return (Criteria) this;
        }

        public Criteria andUploadTimeIsNotNull() {
            addCriterion("upload_time is not null");
            return (Criteria) this;
        }

        public Criteria andUploadTimeEqualTo(Date value) {
            addCriterion("upload_time =", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeNotEqualTo(Date value) {
            addCriterion("upload_time <>", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeGreaterThan(Date value) {
            addCriterion("upload_time >", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("upload_time >=", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeLessThan(Date value) {
            addCriterion("upload_time <", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeLessThanOrEqualTo(Date value) {
            addCriterion("upload_time <=", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeIn(List<Date> values) {
            addCriterion("upload_time in", values, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeNotIn(List<Date> values) {
            addCriterion("upload_time not in", values, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeBetween(Date value1, Date value2) {
            addCriterion("upload_time between", value1, value2, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeNotBetween(Date value1, Date value2) {
            addCriterion("upload_time not between", value1, value2, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andForModuleIsNull() {
            addCriterion("for_module is null");
            return (Criteria) this;
        }

        public Criteria andForModuleIsNotNull() {
            addCriterion("for_module is not null");
            return (Criteria) this;
        }

        public Criteria andForModuleEqualTo(String value) {
            addCriterion("for_module =", value, "forModule");
            return (Criteria) this;
        }

        public Criteria andForModuleNotEqualTo(String value) {
            addCriterion("for_module <>", value, "forModule");
            return (Criteria) this;
        }

        public Criteria andForModuleGreaterThan(String value) {
            addCriterion("for_module >", value, "forModule");
            return (Criteria) this;
        }

        public Criteria andForModuleGreaterThanOrEqualTo(String value) {
            addCriterion("for_module >=", value, "forModule");
            return (Criteria) this;
        }

        public Criteria andForModuleLessThan(String value) {
            addCriterion("for_module <", value, "forModule");
            return (Criteria) this;
        }

        public Criteria andForModuleLessThanOrEqualTo(String value) {
            addCriterion("for_module <=", value, "forModule");
            return (Criteria) this;
        }

        public Criteria andForModuleLike(String value) {
            addCriterion("for_module like", value, "forModule");
            return (Criteria) this;
        }

        public Criteria andForModuleNotLike(String value) {
            addCriterion("for_module not like", value, "forModule");
            return (Criteria) this;
        }

        public Criteria andForModuleIn(List<String> values) {
            addCriterion("for_module in", values, "forModule");
            return (Criteria) this;
        }

        public Criteria andForModuleNotIn(List<String> values) {
            addCriterion("for_module not in", values, "forModule");
            return (Criteria) this;
        }

        public Criteria andForModuleBetween(String value1, String value2) {
            addCriterion("for_module between", value1, value2, "forModule");
            return (Criteria) this;
        }

        public Criteria andForModuleNotBetween(String value1, String value2) {
            addCriterion("for_module not between", value1, value2, "forModule");
            return (Criteria) this;
        }

        public Criteria andPhotoNameIsNull() {
            addCriterion("photo_name is null");
            return (Criteria) this;
        }

        public Criteria andPhotoNameIsNotNull() {
            addCriterion("photo_name is not null");
            return (Criteria) this;
        }

        public Criteria andPhotoNameEqualTo(String value) {
            addCriterion("photo_name =", value, "photoName");
            return (Criteria) this;
        }

        public Criteria andPhotoNameNotEqualTo(String value) {
            addCriterion("photo_name <>", value, "photoName");
            return (Criteria) this;
        }

        public Criteria andPhotoNameGreaterThan(String value) {
            addCriterion("photo_name >", value, "photoName");
            return (Criteria) this;
        }

        public Criteria andPhotoNameGreaterThanOrEqualTo(String value) {
            addCriterion("photo_name >=", value, "photoName");
            return (Criteria) this;
        }

        public Criteria andPhotoNameLessThan(String value) {
            addCriterion("photo_name <", value, "photoName");
            return (Criteria) this;
        }

        public Criteria andPhotoNameLessThanOrEqualTo(String value) {
            addCriterion("photo_name <=", value, "photoName");
            return (Criteria) this;
        }

        public Criteria andPhotoNameLike(String value) {
            addCriterion("photo_name like", value, "photoName");
            return (Criteria) this;
        }

        public Criteria andPhotoNameNotLike(String value) {
            addCriterion("photo_name not like", value, "photoName");
            return (Criteria) this;
        }

        public Criteria andPhotoNameIn(List<String> values) {
            addCriterion("photo_name in", values, "photoName");
            return (Criteria) this;
        }

        public Criteria andPhotoNameNotIn(List<String> values) {
            addCriterion("photo_name not in", values, "photoName");
            return (Criteria) this;
        }

        public Criteria andPhotoNameBetween(String value1, String value2) {
            addCriterion("photo_name between", value1, value2, "photoName");
            return (Criteria) this;
        }

        public Criteria andPhotoNameNotBetween(String value1, String value2) {
            addCriterion("photo_name not between", value1, value2, "photoName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_photo
     *
     * @mbg.generated do_not_delete_during_merge Wed Sep 25 10:59:33 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_photo
     *
     * @mbg.generated Wed Sep 25 10:59:33 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}